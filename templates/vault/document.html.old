{% extends "base.html" %}
{% block title %}{{ doc.title }} ¬∑ Vault{% endblock %}
{% set active = 'vault' %}

{% block content %}
<style>
  .document-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
  }
  
  .document-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: 20px;
    margin-bottom: 30px;
  }
  
  .doc-title-section {
    flex: 1;
  }
  
  .doc-title {
    display: flex;
    align-items: center;
    gap: 12px;
    margin-bottom: 12px;
  }
  
  .doc-title h1 {
    font-size: 28px;
    color: var(--text);
    margin: 0;
  }
  
  .doc-icon {
    font-size: 32px;
  }
  
  .pin-indicator {
    color: var(--warning);
    font-size: 24px;
  }
  
  .doc-meta {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    color: var(--muted);
    font-size: 14px;
  }
  
  .meta-item {
    display: flex;
    align-items: center;
    gap: 6px;
  }
  
  .doc-actions {
    display: flex;
    gap: 10px;
  }
  
  .action-btn {
    padding: 8px 16px;
    background: rgba(110,168,255,0.1);
    color: var(--primary);
    border: 1px solid var(--primary);
    border-radius: 6px;
    cursor: pointer;
    transition: all 0.2s;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    gap: 6px;
    font-size: 14px;
  }
  
  .action-btn:hover {
    background: var(--primary);
    color: var(--bg);
  }
  
  .action-btn.danger {
    background: rgba(255,87,87,0.1);
    color: var(--danger);
    border-color: var(--danger);
  }
  
  .action-btn.danger:hover {
    background: var(--danger);
    color: white;
  }
  
  .content-grid {
    display: grid;
    grid-template-columns: 1fr 320px;
    gap: 30px;
  }
  
  .main-content {
    background: var(--card);
    border: 1px solid var(--line);
    border-radius: 10px;
    overflow: hidden;
  }
  
  .content-header {
    padding: 16px 20px;
    background: rgba(0,0,0,0.2);
    border-bottom: 1px solid var(--line);
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  .content-title {
    font-size: 16px;
    color: var(--text);
    font-weight: 500;
  }
  
  .content-body {
    padding: 20px;
  }
  
  .document-content {
    color: var(--text);
    line-height: 1.6;
    white-space: pre-wrap;
    word-wrap: break-word;
    font-family: 'Consolas', 'Monaco', monospace;
    font-size: 14px;
    max-height: 600px;
    overflow-y: auto;
    background: rgba(0,0,0,0.2);
    padding: 16px;
    border-radius: 6px;
  }
  
  .file-preview {
    text-align: center;
    padding: 40px;
    color: var(--muted);
  }
  
  .file-preview-icon {
    font-size: 64px;
    margin-bottom: 16px;
  }
  
  .file-info {
    background: rgba(0,0,0,0.2);
    padding: 16px;
    border-radius: 6px;
    margin-top: 16px;
  }
  
  .file-info-row {
    display: flex;
    justify-content: space-between;
    padding: 8px 0;
    border-bottom: 1px solid var(--line);
  }
  
  .file-info-row:last-child {
    border-bottom: none;
  }
  
  .file-info-label {
    color: var(--muted);
    font-size: 14px;
  }
  
  .file-info-value {
    color: var(--text);
    font-size: 14px;
    font-weight: 500;
  }
  
  .sidebar {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }
  
  .sidebar-card {
    background: var(--card);
    border: 1px solid var(--line);
    border-radius: 10px;
    padding: 16px;
  }
  
  .sidebar-title {
    font-size: 14px;
    font-weight: 600;
    color: var(--text);
    margin-bottom: 12px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }
  
  .tags-list {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
  }
  
  .tag {
    padding: 4px 10px;
    background: rgba(110,168,255,0.1);
    color: var(--primary);
    border-radius: 12px;
    font-size: 13px;
    text-decoration: none;
    transition: all 0.2s;
  }
  
  .tag:hover {
    background: rgba(110,168,255,0.2);
  }
  
  .info-list {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }
  
  .info-item {
    display: flex;
    justify-content: space-between;
    font-size: 14px;
  }
  
  .info-label {
    color: var(--muted);
  }
  
  .info-value {
    color: var(--text);
    font-weight: 500;
  }
  
  .folder-link {
    color: var(--primary);
    text-decoration: none;
  }
  
  .folder-link:hover {
    text-decoration: underline;
  }
  
  .related-list {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }
  
  .related-item {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 10px;
    background: rgba(0,0,0,0.2);
    border-radius: 6px;
    text-decoration: none;
    color: var(--text);
    transition: all 0.2s;
  }
  
  .related-item:hover {
    background: rgba(110,168,255,0.1);
  }
  
  .related-icon {
    font-size: 20px;
  }
  
  .related-title {
    flex: 1;
    font-size: 14px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  
  .version-history {
    margin-top: 30px;
    background: var(--card);
    border: 1px solid var(--line);
    border-radius: 10px;
    padding: 20px;
  }
  
  .version-title {
    font-size: 16px;
    font-weight: 600;
    color: var(--text);
    margin-bottom: 16px;
  }
  
  .version-list {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }
  
  .version-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 12px;
    background: rgba(0,0,0,0.2);
    border-radius: 6px;
  }
  
  .version-info {
    display: flex;
    flex-direction: column;
    gap: 4px;
  }
  
  .version-number {
    font-weight: 500;
    color: var(--text);
  }
  
  .version-note {
    font-size: 13px;
    color: var(--muted);
  }
  
  .version-date {
    font-size: 12px;
    color: var(--muted);
  }
  
  .version-actions {
    display: flex;
    gap: 8px;
  }
  
  .version-btn {
    padding: 4px 8px;
    font-size: 12px;
    background: rgba(110,168,255,0.1);
    color: var(--primary);
    border: 1px solid var(--primary);
    border-radius: 4px;
    cursor: pointer;
    text-decoration: none;
    transition: all 0.2s;
  }
  
  .version-btn:hover {
    background: var(--primary);
    color: var(--bg);
  }
  
  .empty-state {
    text-align: center;
    padding: 20px;
    color: var(--muted);
    font-size: 14px;
  }
  
  @media (max-width: 768px) {
    .content-grid {
      grid-template-columns: 1fr;
    }
    
    .document-header {
      flex-direction: column;
    }
    
    .doc-actions {
      width: 100%;
      justify-content: flex-start;
    }
  }
</style>

<div class="document-container">
  <!-- Header -->
  <div class="document-header">
    <div class="doc-title-section">
      <div class="doc-title">
        <span class="doc-icon">{{ file_icon }}</span>
        <h1>{{ doc.title }}</h1>
        {% if doc.pinned %}
        <span class="pin-indicator" title="Pinned">üìå</span>
        {% endif %}
      </div>
      
      <div class="doc-meta">
        <div class="meta-item">
          <span>üìÖ</span>
          <span>Created {{ doc.created_at|time_ago }}</span>
        </div>
        <div class="meta-item">
          <span>‚úèÔ∏è</span>
          <span>Updated {{ doc.updated_at|time_ago }}</span>
        </div>
        {% if doc.accessed_at %}
        <div class="meta-item">
          <span>üëÅÔ∏è</span>
          <span>Accessed {{ doc.accessed_at|time_ago }}</span>
        </div>
        {% endif %}
        {% if doc.file_size %}
        <div class="meta-item">
          <span>üíæ</span>
          <span>{{ (doc.file_size / 1024)|round(1) }} KB</span>
        </div>
        {% endif %}
      </div>
    </div>
    
    <div class="doc-actions">
      <a href="{{ url_for('vault.edit_document', id=doc.id) }}" class="action-btn">
        ‚úèÔ∏è Edit
      </a>
      {% if doc.file_path %}
      <a href="{{ url_for('vault.download_file', id=doc.id) }}" class="action-btn">
        ‚¨áÔ∏è Download
      </a>
      {% endif %}
      <button onclick="togglePin({{ doc.id }})" class="action-btn" id="pin-btn">
        {% if doc.pinned %}üìå Unpin{% else %}üìå Pin{% endif %}
      </button>
      <form action="{{ url_for('vault.archive_document', id=doc.id) }}" method="POST" style="display:inline;">
        <button type="submit" class="action-btn danger" onclick="return confirm('Archive this document?')">
          üì¶ Archive
        </button>
      </form>
    </div>
  </div>
  
  <!-- Main Content -->
  <div class="content-grid">
    <div class="main-content">
      <div class="content-header">
        <span class="content-title">Document Content</span>
        {% if doc.doc_type %}
        <span class="tag">{{ doc.doc_type }}</span>
        {% endif %}
      </div>
      
      <div class="content-body">
        {% if doc.content %}
        <pre class="document-content">{{ doc.content }}</pre>
        {% elif doc.file_path %}
        <div class="file-preview">
          <div class="file-preview-icon">{{ file_icon }}</div>
          <h3>{{ doc.file_name or 'File Attached' }}</h3>
          <p>This document contains an attached file.</p>
          <a href="{{ url_for('vault.download_file', id=doc.id) }}" class="action-btn" style="margin-top:20px;">
            ‚¨áÔ∏è Download File
          </a>
          
          <div class="file-info">
            <div class="file-info-row">
              <span class="file-info-label">Filename:</span>
              <span class="file-info-value">{{ doc.file_name }}</span>
            </div>
            <div class="file-info-row">
              <span class="file-info-label">Type:</span>
              <span class="file-info-value">{{ doc.mime_type or 'Unknown' }}</span>
            </div>
            <div class="file-info-row">
              <span class="file-info-label">Size:</span>
              <span class="file-info-value">{{ (doc.file_size / 1024)|round(1) }} KB</span>
            </div>
          </div>
        </div>
        {% else %}
        <div class="empty-state">
          No content available for this document.
        </div>
        {% endif %}
      </div>
    </div>
    
    <!-- Sidebar -->
    <div class="sidebar">
      <!-- Tags -->
      {% if doc.tags %}
      <div class="sidebar-card">
        <div class="sidebar-title">Tags</div>
        <div class="tags-list">
          {% for tag in doc.tags %}
          <a href="{{ url_for('vault.search', tag=tag.name) }}" class="tag">
            {{ tag.name }}
          </a>
          {% endfor %}
        </div>
      </div>
      {% endif %}
      
      <!-- Document Info -->
      <div class="sidebar-card">
        <div class="sidebar-title">Information</div>
        <div class="info-list">
          <div class="info-item">
            <span class="info-label">Type:</span>
            <span class="info-value">{{ doc.doc_type|title }}</span>
          </div>
          {% if doc.folder %}
          <div class="info-item">
            <span class="info-label">Folder:</span>
            <a href="{{ url_for('vault.search', folder_id=doc.folder.id) }}" class="folder-link">
              {{ doc.folder.icon }} {{ doc.folder.name }}
            </a>
          </div>
          {% endif %}
          <div class="info-item">
            <span class="info-label">ID:</span>
            <span class="info-value">#{{ doc.id }}</span>
          </div>
          {% if doc.links %}
          <div class="info-item">
            <span class="info-label">Links:</span>
            <span class="info-value">{{ doc.links|length }}</span>
          </div>
          {% endif %}
        </div>
      </div>
      
      <!-- Related Documents -->
      {% if related %}
      <div class="sidebar-card">
        <div class="sidebar-title">Related Documents</div>
        <div class="related-list">
          {% for rel_doc in related %}
          <a href="{{ url_for('vault.view_document', id=rel_doc.id) }}" class="related-item">
            <span class="related-icon">{{ rel_doc.doc_type|file_icon }}</span>
            <span class="related-title">{{ rel_doc.title }}</span>
          </a>
          {% endfor %}
        </div>
      </div>
      {% endif %}
      
      <!-- External Links -->
      {% if doc.links %}
      <div class="sidebar-card">
        <div class="sidebar-title">External Links</div>
        <div class="related-list">
          {% for link in doc.links %}
          <a href="{{ link.url }}" target="_blank" class="related-item">
            <span class="related-icon">üîó</span>
            <span class="related-title">{{ link.title or link.url }}</span>
          </a>
          {% endfor %}
        </div>
      </div>
      {% endif %}
    </div>
  </div>
  
  <!-- Version History -->
  {% if doc.versions %}
  <div class="version-history">
    <div class="version-title">Version History</div>
    <div class="version-list">
      {% for version in doc.versions|sort(attribute='version_number', reverse=True) %}
      <div class="version-item">
        <div class="version-info">
          <span class="version-number">Version {{ version.version_number }}</span>
          <span class="version-note">{{ version.change_note }}</span>
          <span class="version-date">{{ version.created_at|time_ago }}</span>
        </div>
        <div class="version-actions">
          <a href="#" onclick="viewVersion({{ version.id }})" class="version-btn">View</a>
          <a href="#" onclick="restoreVersion({{ version.id }})" class="version-btn">Restore</a>
        </div>
      </div>
      {% endfor %}
    </div>
  </div>
  {% endif %}
</div>

<script>
// Toggle pin status
async function togglePin(docId) {
  try {
    const response = await fetch(`/vault/document/${docId}/pin`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      }
    });
    
    if (response.ok) {
      const data = await response.json();
      const btn = document.getElementById('pin-btn');
      btn.innerHTML = data.pinned ? 'üìå Unpin' : 'üìå Pin';
      
      // Update pin indicator in title
      const pinIndicator = document.querySelector('.pin-indicator');
      if (data.pinned && !pinIndicator) {
        const title = document.querySelector('.doc-title');
        const pin = document.createElement('span');
        pin.className = 'pin-indicator';
        pin.title = 'Pinned';
        pin.textContent = 'üìå';
        title.appendChild(pin);
      } else if (!data.pinned && pinIndicator) {
        pinIndicator.remove();
      }
    }
  } catch (err) {
    console.error('Error toggling pin:', err);
  }
}

// View version (placeholder)
function viewVersion(versionId) {
  alert('Version view will open version #' + versionId);
  // You can implement a modal or redirect to view the version
}

// Restore version (placeholder)
function restoreVersion(versionId) {
  if (confirm('Restore this version? Current content will be saved as a new version.')) {
    alert('Version #' + versionId + ' will be restored');
    // Implement version restore functionality
  }
}
</script>
{% endblock %}