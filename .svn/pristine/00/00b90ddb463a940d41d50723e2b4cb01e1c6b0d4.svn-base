# Quick Installation Guide - Life Management System

## üöÄ Fastest Installation Methods

### Option 1: One-Line Install (All packages at once)

**Windows Command Prompt / PowerShell:**
```bash
pip install Flask==3.0.0 Flask-SQLAlchemy==3.1.1 SQLAlchemy==2.0.23 greenlet==3.0.1 Werkzeug==3.0.1 gunicorn==21.2.0 python-dateutil==2.8.2 click==8.1.7 Jinja2==3.1.2 MarkupSafe==2.1.3 python-magic==0.4.27 Pillow==10.1.0 python-dotenv==1.0.0 flask-debugtoolbar==0.14.1 pytest==7.4.3 pytest-flask==1.3.0 typing_extensions==4.8.0 six==1.16.0 itsdangerous==2.1.2 blinker==1.7.0
```

**Linux / macOS Terminal:**
```bash
pip install Flask==3.0.0 Flask-SQLAlchemy==3.1.1 SQLAlchemy==2.0.23 greenlet==3.0.1 Werkzeug==3.0.1 gunicorn==21.2.0 python-dateutil==2.8.2 click==8.1.7 Jinja2==3.1.2 MarkupSafe==2.1.3 python-magic==0.4.27 Pillow==10.1.0 python-dotenv==1.0.0 flask-debugtoolbar==0.14.1 pytest==7.4.3 pytest-flask==1.3.0 typing_extensions==4.8.0 six==1.16.0 itsdangerous==2.1.2 blinker==1.7.0
```

### Option 2: Minimal Installation (Core packages only)

```bash
pip install Flask==3.0.0 Flask-SQLAlchemy==3.1.1 SQLAlchemy==2.0.23 Pillow==10.1.0 python-dateutil==2.8.2
```

### Option 3: Using requirements.txt (Recommended)

```bash
pip install -r requirements.txt
```

### Option 4: Latest Versions (No version pinning - use with caution)

```bash
pip install Flask Flask-SQLAlchemy SQLAlchemy greenlet Werkzeug gunicorn python-dateutil click Jinja2 MarkupSafe python-magic Pillow python-dotenv flask-debugtoolbar pytest pytest-flask typing_extensions six itsdangerous blinker
```

## üìã Complete Step-by-Step Installation

### 1. Prerequisites
- Python 3.8 or higher installed
- pip package manager

### 2. Create Virtual Environment (Recommended)

**Windows:**
```cmd
python -m venv venv
venv\Scripts\activate
```

**Linux/macOS:**
```bash
python3 -m venv venv
source venv/bin/activate
```

### 3. Install All Packages

Copy and paste ONE of these commands:

**Full Installation with Testing Tools:**
```bash
pip install Flask==3.0.0 Flask-SQLAlchemy==3.1.1 SQLAlchemy==2.0.23 greenlet==3.0.1 Werkzeug==3.0.1 gunicorn==21.2.0 python-dateutil==2.8.2 click==8.1.7 Jinja2==3.1.2 MarkupSafe==2.1.3 python-magic==0.4.27 Pillow==10.1.0 python-dotenv==1.0.0 flask-debugtoolbar==0.14.1 pytest==7.4.3 pytest-flask==1.3.0 typing_extensions==4.8.0 six==1.16.0 itsdangerous==2.1.2 blinker==1.7.0
```

**Production Installation (No testing/debug tools):**
```bash
pip install Flask==3.0.0 Flask-SQLAlchemy==3.1.1 SQLAlchemy==2.0.23 greenlet==3.0.1 Werkzeug==3.0.1 gunicorn==21.2.0 python-dateutil==2.8.2 click==8.1.7 Jinja2==3.1.2 MarkupSafe==2.1.3 python-magic==0.4.27 Pillow==10.1.0 python-dotenv==1.0.0 typing_extensions==4.8.0 six==1.16.0 itsdangerous==2.1.2 blinker==1.7.0
```

### 4. Verify Installation

```bash
pip list
```

You should see all packages listed.

### 5. Initialize Database

```python
python
>>> from app import create_app
>>> from models.base import db
>>> app = create_app()
>>> with app.app_context():
...     db.create_all()
...     from models.daily_planner import init_daily_planner
...     init_daily_planner()
>>> exit()
```

### 6. Run Application

```bash
python app.py
```

## üîß Troubleshooting

### Windows: python-magic Issues

If you get errors with python-magic on Windows:
```bash
pip uninstall python-magic
pip install python-magic-bin==0.4.14
```

### Permission Errors

Run with administrator/sudo:
```bash
# Windows (Run as Administrator)
pip install --user [package_name]

# Linux/macOS
sudo pip install [package_name]
```

### SSL Certificate Errors

```bash
pip install --trusted-host pypi.org --trusted-host files.pythonhosted.org [package_name]
```

### Memory Issues During Installation

Install packages one at a time:
```bash
pip install Flask==3.0.0
pip install Flask-SQLAlchemy==3.1.1
pip install SQLAlchemy==2.0.23
# ... continue for each package
```

## üîç Package Groups Breakdown

### Core Framework (Required)
```bash
pip install Flask==3.0.0 Flask-SQLAlchemy==3.1.1 SQLAlchemy==2.0.23
```

### Database Support (Required)
```bash
pip install greenlet==3.0.1 typing_extensions==4.8.0
```

### Web Server (Required for deployment)
```bash
pip install Werkzeug==3.0.1 gunicorn==21.2.0
```

### File Handling (Required for uploads)
```bash
pip install Pillow==10.1.0 python-magic==0.4.27
```

### Utilities (Recommended)
```bash
pip install python-dateutil==2.8.2 python-dotenv==1.0.0 click==8.1.7
```

### Development Tools (Optional)
```bash
pip install flask-debugtoolbar==0.14.1
```

### Testing (Optional)
```bash
pip install pytest==7.4.3 pytest-flask==1.3.0
```

### Template Engine (Auto-installed with Flask)
```bash
pip install Jinja2==3.1.2 MarkupSafe==2.1.3
```

### Supporting Libraries (Auto-installed)
```bash
pip install six==1.16.0 itsdangerous==2.1.2 blinker==1.7.0
```

## ‚ö° Ultra-Quick Start (Copy & Paste)

For the absolutely fastest setup, run these commands in order:

```bash
# 1. Create and activate virtual environment
python -m venv venv && venv\Scripts\activate

# 2. Install everything
pip install Flask==3.0.0 Flask-SQLAlchemy==3.1.1 SQLAlchemy==2.0.23 greenlet==3.0.1 Werkzeug==3.0.1 gunicorn==21.2.0 python-dateutil==2.8.2 click==8.1.7 Jinja2==3.1.2 MarkupSafe==2.1.3 python-magic==0.4.27 Pillow==10.1.0 python-dotenv==1.0.0 typing_extensions==4.8.0 six==1.16.0 itsdangerous==2.1.2 blinker==1.7.0

# 3. Run the app
python app.py
```

## üì¶ Package Versions Reference

| Package | Version | Purpose |
|---------|---------|---------|
| Flask | 3.0.0 | Web framework |
| Flask-SQLAlchemy | 3.1.1 | Database ORM integration |
| SQLAlchemy | 2.0.23 | Database ORM |
| Pillow | 10.1.0 | Image processing |
| gunicorn | 21.2.0 | Production web server |
| python-dateutil | 2.8.2 | Date/time utilities |
| python-magic | 0.4.27 | File type detection |
| Werkzeug | 3.0.1 | WSGI utilities |
| Jinja2 | 3.1.2 | Template engine |

---
**Note:** For production deployment, consider using a virtual environment and the exact versions specified to ensure compatibility.