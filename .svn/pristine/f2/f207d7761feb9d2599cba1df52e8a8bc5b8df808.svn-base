{# =============================================================================
  FILE: equipment_cost_analysis.html
  PURPOSE: Cost analysis & insights for a single equipment item
  TEMPLATE VERSION: v1.0.1
  LAST UPDATED: 2025-09-05

  HIGHLIGHTS
  - Dark, page-scoped theme (safe fallbacks to base variables)
  - Sticky header with actions: Back, Export CSV, Print
  - Hero ‚ÄúTotal Cost of Ownership‚Äù slab
  - Clean category breakdown cards with % of total + quick links
  - KPI strip: Cost/mi or Cost/hr, Purchase Price, Operating Costs
  - ‚ÄúWhat-if‚Äù projection calculator (12-month forecast) using cost_per_mile/hour
  - Monthly trend bars (maintenance) with max highlight
  - Actionable tips based on your data

  CHANGELOG
  v1.0.1
  - FIX: Purchase Price KPI/tip now resolve value robustly from model, row, or mapping.
        No backend changes required.
  v1.0.0
  - NEW: Full dark refactor; sticky actions; CSV export; print; projection calc;
         polished breakdown & monthly bars; clearer card hierarchy & spacing.
============================================================================= #}

{% extends "base.html" %}
{% block title %}Cost Analysis - {{ equipment.name }}{% endblock %}
{% block header %}Cost Analysis - {{ equipment.name }}{% endblock %}

{# ========================= EXTRA CSS (page-scoped) ========================= #}
{% block extra_css %}
<style>
  :root{
    --ca-bg: var(--bg, #0b0f1a);
    --ca-card: var(--card, #0f1625);
    --ca-sub: #0c1322;
    --ca-line: var(--line, #1f2a3d);
    --ca-text: var(--text, #e6eaf2);
    --ca-muted: var(--text-muted, #9fb0c8);
    --ca-primary: var(--primary, #6ea8ff);
    --ca-success: var(--success, #22c55e);
    --ca-warn: var(--warning, #f59e0b);
    --ca-danger: var(--danger, #ef4444);
    --ca-accent: #38bdf8;
    --ca-radius: var(--radius, 14px);
    --ca-shadow: 0 10px 30px rgba(0,0,0,.35);
  }

  .ca-shell{ max-width:1200px; margin:0 auto; padding:16px; display:grid; gap:16px; }

  /* Sticky Action Header */
  .ca-header{
    position: sticky; top:12px; z-index:5;
    background: linear-gradient(180deg, rgba(255,255,255,.05), rgba(255,255,255,.02));
    border:1px solid var(--ca-line); border-radius: var(--ca-radius);
    padding:12px; box-shadow: var(--ca-shadow); backdrop-filter: blur(6px);
    display:grid; grid-template-columns: 1fr auto; align-items:center; gap:10px;
  }
  .ca-title{ margin:0; font-size:1.2rem; letter-spacing:.2px; }
  .ca-sub{ color:var(--ca-muted); font-size:.9rem; margin-top:2px; }
  .btn{
    display:inline-flex; align-items:center; gap:8px; cursor:pointer;
    padding:8px 12px; border-radius:12px; border:1px solid var(--ca-line);
    background: var(--ca-card); color: var(--ca-text); text-decoration:none;
    transition: transform .1s ease, border-color .2s ease, background .2s ease;
    font-size:.95rem;
  }
  .btn:hover{ border-color: var(--ca-primary); transform: translateY(-1px); }
  .btn-secondary{ background:#0c1322; }
  .btn-primary{ background: rgba(110,168,255,.18); border-color: rgba(110,168,255,.45); }
  .btn-sm{ padding:6px 10px; border-radius:10px; font-size:.85rem; }
  .header-actions{ display:flex; gap:8px; flex-wrap:wrap; }

  /* Hero Total */
  .hero{
    text-align:center; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color:#fff; padding:28px; border-radius:18px; box-shadow: var(--ca-shadow);
    border:1px solid rgba(255,255,255,.15);
  }
  .hero .label{ font-size:.75rem; letter-spacing:.16em; opacity:.9; }
  .hero .value{ font-size:42px; font-weight:900; margin:6px 0; }
  .hero .sub{ font-size:.9rem; opacity:.9; }

  /* Section cards */
  .card{
    background: var(--ca-card); border:1px solid var(--ca-line);
    border-radius: var(--ca-radius); padding:16px; box-shadow: var(--ca-shadow);
  }
  .section-title{ margin:0 0 8px 0; font-size:1.05rem; }

  /* Category grid */
  .cat-grid{ display:grid; grid-template-columns: repeat(auto-fit, minmax(220px,1fr)); gap:12px; }
  .cat-card{
    background: var(--ca-sub); border:1px solid var(--ca-line);
    border-radius:12px; padding:14px; text-align:center; transition: transform .1s ease, border-color .2s ease;
  }
  .cat-card:hover{ transform: translateY(-1px); border-color: var(--ca-primary); }
  .cat-card .icon{ font-size:30px; display:block; margin-bottom:6px; }
  .cat-card h4{ margin:6px 0; font-size:1rem; }
  .cat-card .amount{ font-size:24px; font-weight:800; color: var(--ca-success); }
  .cat-card .pct{ color: var(--ca-muted); font-size:.9rem; }

  /* KPIs */
  .kpis{ display:grid; grid-template-columns: repeat(auto-fit, minmax(220px,1fr)); gap:12px; }
  .kpi{
    background: var(--ca-sub); border:1px solid var(--ca-line);
    border-radius:12px; padding:14px; display:flex; flex-direction:column; align-items:center; gap:6px;
  }
  .kpi .label{ font-size:.75rem; letter-spacing:.12em; color: var(--ca-muted); text-transform:uppercase; }
  .kpi .value{ font-size:22px; font-weight:800; }

  /* What-if */
  .whatif-grid{ display:grid; grid-template-columns: 1fr 1fr; gap:12px; }
  .form-group{ display:grid; gap:6px; }
  label{ color: var(--ca-muted); font-size:.9rem; }
  input[type="number"]{
    background:#0b1120; color: var(--ca-text); border:1px solid var(--ca-line); border-radius:10px; padding:10px; outline:none;
  }
  input[type="number"]:focus{ border-color: var(--ca-primary); box-shadow: 0 0 0 2px rgba(110,168,255,.15); }
  .proj{ background:#0b1120; border:1px dashed var(--ca-line); border-radius:12px; padding:12px; display:grid; gap:6px; }
  .proj .big{ font-size:22px; font-weight:900; }

  /* Monthly bars */
  .bars{ display:flex; align-items:flex-end; gap:8px; height:220px; overflow-x:auto; padding:12px 4px 0; }
  .m-col{ min-width:52px; display:flex; flex-direction:column; align-items:center; gap:6px; }
  .m-bar{ width:100%; min-height:10px; background: linear-gradient(180deg, #3498db, #2980b9); border-radius:6px 6px 0 0; position:relative; }
  .m-bar.max{ outline:2px solid var(--ca-accent); }
  .m-val{ position:absolute; top:-20px; left:50%; transform:translateX(-50%); font-size:11px; font-weight:800; color:var(--ca-text); }
  .m-lbl{ font-size:12px; color: var(--ca-muted); }

  /* Tips */
  .tips{ background:#0c2a23; border:1px solid #1f5d4a; border-left:4px solid var(--ca-success); color: var(--ca-text); }
  .tips h3{ color: var(--ca-success); margin:0 0 10px 0; }
  .tips ul{ margin:0; padding-left:0; list-style:none; }
  .tips li{ padding:8px 0 8px 28px; position:relative; border-bottom:1px dashed rgba(255,255,255,.06); }
  .tips li:last-child{ border-bottom:none; }
  .tips li:before{ content:"üí°"; position:absolute; left:0; }

  /* Buttons (shared) */
  .btn-row{ display:flex; gap:8px; flex-wrap:wrap; }

  @media (max-width: 860px){
    .ca-header{ grid-template-columns:1fr; }
    .whatif-grid{ grid-template-columns:1fr; }
  }
</style>
{% endblock %}

{# ============================== CONTENT =================================== #}
{% block content %}
<div class="ca-shell">

  {# =================== STICKY HEADER (actions) =================== #}
  <div class="ca-header">
    <div>
      <h1 class="ca-title">Cost Analysis ‚Äî {{ equipment.name }}</h1>
      <div class="ca-sub">{{ equipment.year }} {{ equipment.make }} {{ equipment.model }}</div>
    </div>
    <div class="header-actions">
      <a href="{{ url_for('equipment.detail', id=equipment.id) }}" class="btn btn-secondary">‚Üê Back to Equipment</a>
      <button type="button" class="btn" id="exportCsv">‚¨áÔ∏è Export CSV</button>
      <button type="button" class="btn" onclick="window.print()">üñ®Ô∏è Print</button>
    </div>
  </div>

  {# =================== HERO TOTAL =================== #}
  <div class="hero">
    <div class="label">TOTAL SPENT</div>
    <div class="value">${{ "%.2f"|format(total_cost) }}</div>
    <div class="sub">All categories combined</div>
  </div>

  {# -------------------- Resolve purchase price robustly -------------------- #}
  {# pp will be None if truly unavailable; works for model, row, or mapping #}
  {% set pp = none %}
  {% if equipment is defined %}
    {% if equipment.purchase_price is defined %}
      {% set pp = equipment.purchase_price %}
    {% elif equipment._mapping is defined and equipment._mapping['purchase_price'] is defined %}
      {% set pp = equipment._mapping['purchase_price'] %}
    {% elif equipment.get is defined and equipment.get('purchase_price') is defined %}
      {% set pp = equipment.get('purchase_price') %}
    {% endif %}
  {% endif %}

  {# =================== CATEGORY BREAKDOWN =================== #}
  <div class="card" id="catBreakdown"
       data-maint="{{ '%.2f'|format(maintenance_cost) }}"
       data-cons="{{ '%.2f'|format(consumables_cost) }}"
       data-wash="{{ '%.2f'|format(wash_cost if equipment.category == 'Auto' else 0) }}"
       data-fuel="{{ '%.2f'|format(fuel_cost if equipment.category in ['Auto','ATV','Marine'] else 0) }}"
       data-total="{{ '%.2f'|format(total_cost) }}">
    <h3 class="section-title">Cost Breakdown by Category</h3>
    <div class="cat-grid">
      <div class="cat-card">
        <span class="icon">üîß</span>
        <h4>Maintenance</h4>
        <div class="amount">${{ "%.2f"|format(maintenance_cost) }}</div>
        <div class="pct">{{ "%.1f"|format(maintenance_cost / total_cost * 100) if total_cost > 0 else 0 }}% of total</div>
        <div class="btn-row" style="margin-top:8px;">
          <a class="btn btn-sm" href="{{ url_for('equipment.add_maintenance', id=equipment.id) }}">+ Add</a>
        </div>
      </div>

      {% if equipment.category in ['Auto', 'ATV', 'Marine'] %}
      <div class="cat-card">
        <span class="icon">‚õΩ</span>
        <h4>Fuel</h4>
        <div class="amount">${{ "%.2f"|format(fuel_cost) }}</div>
        <div class="pct">{{ "%.1f"|format(fuel_cost / total_cost * 100) if total_cost > 0 else 0 }}% of total</div>
        <div class="btn-row" style="margin-top:8px;">
          <a class="btn btn-sm" href="{{ url_for('equipment.add_fuel', id=equipment.id) }}">+ Log</a>
          <a class="btn btn-sm" href="{{ url_for('equipment.fuel_history', id=equipment.id) }}">History</a>
        </div>
      </div>
      {% endif %}

      <div class="cat-card">
        <span class="icon">üõ¢Ô∏è</span>
        <h4>Consumables</h4>
        <div class="amount">${{ "%.2f"|format(consumables_cost) }}</div>
        <div class="pct">{{ "%.1f"|format(consumables_cost / total_cost * 100) if total_cost > 0 else 0 }}% of total</div>
        <div class="btn-row" style="margin-top:8px;">
          <a class="btn btn-sm" href="{{ url_for('equipment.add_consumable', id=equipment.id) }}">+ Add</a>
          <a class="btn btn-sm" href="{{ url_for('equipment.consumables_history', id=equipment.id) }}">History</a>
        </div>
      </div>

      {% if equipment.category == 'Auto' %}
      <div class="cat-card">
        <span class="icon">üöó</span>
        <h4>Car Wash</h4>
        <div class="amount">${{ "%.2f"|format(wash_cost) }}</div>
        <div class="pct">{{ "%.1f"|format(wash_cost / total_cost * 100) if total_cost > 0 else 0 }}% of total</div>
        <div class="btn-row" style="margin-top:8px;">
          <a class="btn btn-sm" href="{{ url_for('equipment.add_car_wash', id=equipment.id) }}">+ Add</a>
          <a class="btn btn-sm" href="{{ url_for('equipment.car_wash_history', id=equipment.id) }}">History</a>
        </div>
      </div>
      {% endif %}
    </div>
  </div>

  {# =================== KPIs =================== #}
  <div class="kpis">
    {% if cost_per_mile %}
    <div class="kpi">
      <div class="label">Cost per Mile</div>
      <div class="value">${{ "%.3f"|format(cost_per_mile) }}</div>
    </div>
    {% endif %}

    {% if cost_per_hour %}
    <div class="kpi">
      <div class="label">Cost per Hour</div>
      <div class="value">${{ "%.2f"|format(cost_per_hour) }}</div>
    </div>
    {% endif %}

    {% if pp is not none %}
    <div class="kpi">
      <div class="label">Purchase Price</div>
      <div class="value">${{ "%.2f"|format(pp|float) }}</div>
    </div>
    {% endif %}

    <div class="kpi">
      <div class="label">Operating Costs</div>
      <div class="value">${{ "%.2f"|format(total_cost) }}</div>
    </div>
  </div>

  {# =================== WHAT-IF: 12-month Projection =================== #}
  <div class="card">
    <h3 class="section-title">12-Month Projection (What-If)</h3>
    <div class="whatif-grid">
      <div class="form-group">
        {% if cost_per_mile %}
          <label for="usageInput">Projected Miles / Month</label>
          <input type="number" id="usageInput" min="0" step="1" placeholder="e.g., 1000">
          <small style="color:var(--ca-muted);">Uses your current cost per mile to project annual operating spend.</small>
        {% elif cost_per_hour %}
          <label for="usageInput">Projected Hours / Month</label>
          <input type="number" id="usageInput" min="0" step="0.1" placeholder="e.g., 25">
          <small style="color:var(--ca-muted);">Uses your current cost per hour to project annual operating spend.</small>
        {% else %}
          <label>Projection</label>
          <div class="proj">Add mileage or hours data to enable projections.</div>
        {% endif %}
      </div>

      <div class="proj" id="projBox">
        <div>Projected Annual Spend</div>
        <div class="big" id="projAnnual">$0.00</div>
        <div class="ca-sub">Based on your input and current {{ 'cost per mile' if cost_per_mile else ('cost per hour' if cost_per_hour else 'cost rate') }}.</div>
      </div>
    </div>
  </div>

  {# =================== MONTHLY TREND (Maintenance) =================== #}
  {% if monthly_costs %}
  <div class="card">
    <h3 class="section-title">Monthly Maintenance Spending</h3>
    <div class="bars" id="mBars"
         data-months='[
           {% for m in monthly_costs %}
             {"label": "{{ m.month }}", "cost": {{ "%.2f"|format(m.cost) }} }{{ "," if not loop.last }}
           {% endfor %}
         ]'>
      {% set max_cost = (monthly_costs | map(attribute='cost') | max) if monthly_costs else 0 %}
      {% for m in monthly_costs %}
      <div class="m-col">
        <div class="m-bar {{ 'max' if m.cost == max_cost else '' }}"
             style="height: {{ (m.cost / (max_cost if max_cost else 1) * 100) if monthly_costs else 0 }}%;">
          <span class="m-val">${{ "%.0f"|format(m.cost) }}</span>
        </div>
        <div class="m-lbl">{{ m.month }}</div>
      </div>
      {% endfor %}
    </div>
  </div>
  {% endif %}

  {# =================== TIPS =================== #}
  <div class="card tips">
    <h3>Cost Analysis Insights</h3>
    <ul>
      {% if maintenance_cost > total_cost * 0.5 %}
        <li>Maintenance represents over 50% of your costs. Consider tightening preventive intervals to reduce surprise repairs.</li>
      {% endif %}
      {% if equipment.category in ['Auto','ATV','Marine'] and fuel_cost > total_cost * 0.4 %}
        <li>Fuel is a major driver. Track MPG and tire pressure; small losses add up fast.</li>
      {% endif %}
      {% if consumables_cost > 0 %}
        <li>You've spent ${{ "%.2f"|format(consumables_cost) }} on consumables‚Äîbulk buys and multi-packs often cut 10‚Äì20%.</li>
      {% endif %}
      {% if pp is none %}
        <li>Add the purchase price on the equipment profile to complete ROI & TCO calculations.</li>
      {% endif %}
    </ul>
  </div>

  {# =================== PAGE INFO / CHANGELOG =================== #}
  <div class="ca-header" style="position:static;">
    <details>
      <summary style="cursor:pointer; font-weight:800;">Page Info & Changelog</summary>
      <code style="display:block; white-space:pre-wrap; margin-top:8px; color:var(--ca-muted);">
v1.0.1 ‚Äî Purchase Price resolution made robust (model/row/mapping) without backend changes.
v1.0.0 ‚Äî Dark UI refactor; sticky actions; CSV export; print; what-if projection; polished monthly trend and insights.
      </code>
    </details>
  </div>

</div><!-- /ca-shell -->
{% endblock %}

{# ============================= EXTRA JS =================================== #}
{% block extra_js %}
<script>
/* ============================================================================
   CSV Export (categories + monthly trend)
============================================================================ */
(function(){
  const btn = document.getElementById('exportCsv');
  if(!btn) return;
  btn.addEventListener('click', () => {
    const cat = document.getElementById('catBreakdown');
    const rows = [];
    rows.push(['Category','Amount']);

    const total = parseFloat(cat.dataset.total || '0');
    const maint = parseFloat(cat.dataset.maint || '0');
    const cons = parseFloat(cat.dataset.cons || '0');
    const wash = parseFloat(cat.dataset.wash || '0');
    const fuel = parseFloat(cat.dataset.fuel || '0');

    rows.push(['Maintenance', maint.toFixed(2)]);
    rows.push(['Consumables', cons.toFixed(2)]);
    if (fuel > 0) rows.push(['Fuel', fuel.toFixed(2)]);
    if (wash > 0) rows.push(['Car Wash', wash.toFixed(2)]);
    rows.push(['TOTAL', total.toFixed(2)]);
    rows.push([]);
    rows.push(['Month','Maintenance Cost']);

    const mBars = document.getElementById('mBars');
    if (mBars){
      try{
        const months = JSON.parse(mBars.dataset.months || '[]');
        months.forEach(m => rows.push([m.label, Number(m.cost).toFixed(2)]));
      }catch(e){}
    }

    const csv = rows.map(r => r.map(v => `"${String(v).replace(/"/g,'""')}"`).join(',')).join('\n');
    const blob = new Blob([csv], {type:'text/csv;charset=utf-8;'});
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url; a.download = `cost_analysis_{{ equipment.id }}.csv`;
    document.body.appendChild(a); a.click(); a.remove();
    URL.revokeObjectURL(url);
  });
})();

/* ============================================================================
   What-If Projection (12 months)
   - Uses cost_per_mile or cost_per_hour if provided by backend
============================================================================ */
(function(){
  const input = document.getElementById('usageInput');
  const out = document.getElementById('projAnnual');
  if(!input || !out) return;

  const rate = {% if cost_per_mile %} {{ "%.6f"|format(cost_per_mile) }}
              {% elif cost_per_hour %} {{ "%.6f"|format(cost_per_hour) }}
              {% else %} 0 {% endif %};

  function money(n){ return '$' + (isFinite(n) ? Number(n).toFixed(2) : '0.00'); }

  function calc(){
    const perMonth = parseFloat(input.value || '0');
    const annual = perMonth * 12 * rate;
    out.textContent = money(annual);
  }
  input.addEventListener('input', calc);
  calc(); // initial
})();
</script>
{% endblock %}
