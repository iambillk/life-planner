{# =============================================================================
  FILE: projects_edit_tch.html
  PURPOSE: Edit an existing TCH Project
  TEMPLATE VERSION: v1.0.0
  LAST UPDATED: 2025-09-04

  CHANGELOG
  v1.0.0
  - NEW: Dark UI & compact layout to match base/add pages
  - NEW: Sticky action header (Back / Save)
  - NEW: Live char counters for long fields
  - NEW: Date validation (deadline ‚â• start)
  - NEW: Dynamic Retrospective section shows when status = completed
  - NEW: Single-submit guard with ‚ÄúSaving‚Ä¶‚Äù state
============================================================================= #}

{% extends "base.html" %}

{% block title %}Edit TCH Project{% endblock %}
{% block header %}Edit Project{% endblock %}

{% block extra_css %}
<style>
  :root{
    --ep-card: var(--card, #0f1625);
    --ep-line: var(--line, #1f2a3d);
    --ep-text: var(--text, #e6eaf2);
    --ep-muted: var(--text-muted, #9fb0c8);
    --ep-primary: var(--primary, #6ea8ff);
    --ep-primary-700: var(--primary-700, #3f7fe6);
    --ep-danger: var(--danger, #ef4444);
    --ep-radius: var(--radius, 14px);
    --ep-radius-sm: var(--radius-sm, 10px);
    --ep-shadow: 0 6px 18px rgba(0,0,0,.35);
  }

  .form-container{
    max-width: 980px; margin: 0 auto; padding: 14px; display:grid; gap:14px;
  }

  /* Sticky header */
  .form-header{
    position: sticky; top: 12px; z-index: 5;
    display:grid; grid-template-columns: 1fr auto; gap:10px; align-items:center;
    background: linear-gradient(180deg, rgba(255,255,255,.04), rgba(255,255,255,.02));
    border:1px solid var(--ep-line); border-radius: var(--ep-radius);
    padding:10px 12px; box-shadow: var(--ep-shadow); backdrop-filter: blur(6px);
  }
  .form-header h1{ margin:0; font-size:1.1rem; letter-spacing:.2px; }
  .header-actions{ display:flex; gap:8px; flex-wrap:wrap; }

  /* Buttons */
  .btn{
    display:inline-flex; align-items:center; gap:8px;
    padding:8px 12px; border-radius:12px; border:1px solid var(--ep-line);
    background: var(--ep-card); color: var(--ep-text); text-decoration:none;
    transition: transform .1s ease, border-color .2s ease, background .2s ease;
    font-size:.95rem;
  }
  .btn:hover{ transform: translateY(-1px); border-color: var(--ep-primary); }
  .btn-primary{ background: rgba(110,168,255,.18); border-color: rgba(110,168,255,.45); }
  .btn-primary[disabled]{ opacity:.6; cursor:progress; }
  .btn-secondary{ background:#0c1322; }
  .btn-danger{ background:#2a0f15; border-color:#7f1d1d; color:#fecaca; }
  .btn-danger:hover{ border-color: var(--ep-danger); color: #fee2e2; }

  /* Carded form */
  .project-form{
    background: var(--ep-card); border:1px solid var(--ep-line);
    border-radius: var(--ep-radius); box-shadow: var(--ep-shadow);
    padding:14px; display:grid; gap:18px;
  }
  .form-section{
    border:1px dashed var(--ep-line); border-radius: var(--ep-radius-sm);
    padding:12px; display:grid; gap:12px;
  }
  .form-section h2{
    margin:0; font-size:1.02rem; padding-bottom:6px;
    border-bottom:1px dashed var(--ep-line);
  }

  .form-row{ display:grid; grid-template-columns: 1fr 1fr; gap:12px; }
  @media (max-width:820px){ .form-row{ grid-template-columns: 1fr; } }

  .form-group{ display:grid; gap:6px; }
  .form-group label{ color: var(--ep-muted); font-weight:600; }
  .required{ color: var(--ep-danger); }

  /* Inputs */
  .project-form input[type="text"],
  .project-form input[type="date"],
  .project-form select,
  .project-form textarea{
    width:100%; background:#0b1120; color: var(--ep-text);
    border:1px solid var(--ep-line); border-radius:10px; padding:10px 12px;
    font-size:.95rem;
  }
  .project-form textarea{ resize: vertical; min-height: 80px; }
  .counter{ color: var(--ep-muted); font-size:.8rem; text-align:right; }

  /* Actions row */
  .form-actions{ display:flex; gap:10px; justify-content:flex-start; }

  /* Danger zone */
  .danger-zone{
    background:#160f12; border:1px solid rgba(239,68,68,.45);
    border-radius: var(--ep-radius); padding:14px; box-shadow: var(--ep-shadow);
  }
  .danger-zone h3{ margin:0 0 6px 0; color:#fecaca; }
  .danger-zone p{ margin:0 0 10px 0; color:#fca5a5; }

  /* Helper text */
  .hint{ color: var(--ep-muted); font-size:.85rem; }

  /* Responsive button stacking */
  @media (max-width: 680px){
    .form-actions{ flex-direction:column; }
    .form-actions .btn, .header-actions .btn{ width:100%; justify-content:center; }
  }
</style>
{% endblock %}

{% block content %}
<div class="form-container">
  <!-- Sticky header -->
  <div class="form-header">
    <h1>Edit Project: {{ project.name }}</h1>
    <div class="header-actions">
      <a href="{{ url_for('projects.tch_detail', id=project.id) }}" class="btn">‚Üê Back to Project</a>
      <button form="editProjectForm" class="btn btn-primary" id="saveTop">üíæ Save Changes</button>
    </div>
  </div>

  <!-- Main form -->
  <form id="editProjectForm" method="POST" class="project-form">
    <!-- Basic Information -->
    <div class="form-section">
      <h2>Basic Information</h2>

      <div class="form-row">
        <div class="form-group">
          <label for="name">Project Name <span class="required">*</span></label>
          <input type="text" id="name" name="name" value="{{ project.name }}" required maxlength="120">
          <div class="counter" data-for="name"></div>
        </div>

        <div class="form-group">
          <label for="category">Category <span class="required">*</span></label>
          <select id="category" name="category" required>
            {% for cat in categories %}
            <option value="{{ cat }}" {% if project.category == cat %}selected{% endif %}>{{ cat }}</option>
            {% endfor %}
          </select>
        </div>
      </div>

      <div class="form-group">
        <label for="description">Description</label>
        <textarea id="description" name="description" rows="3" maxlength="1000">{{ project.description or '' }}</textarea>
        <div class="counter" data-for="description"></div>
      </div>
    </div>

    <!-- Project Details -->
    <div class="form-section">
      <h2>Project Details</h2>

      <div class="form-group">
        <label for="goal">Goal/Objective</label>
        <textarea id="goal" name="goal" rows="2" maxlength="500">{{ project.goal or '' }}</textarea>
        <div class="counter" data-for="goal"></div>
      </div>

      <div class="form-group">
        <label for="motivation">Motivation</label>
        <textarea id="motivation" name="motivation" rows="2" maxlength="500">{{ project.motivation or '' }}</textarea>
        <div class="counter" data-for="motivation"></div>
      </div>

      <div class="form-group">
        <label for="strategy">Strategy</label>
        <textarea id="strategy" name="strategy" rows="2" maxlength="500">{{ project.strategy or '' }}</textarea>
        <div class="counter" data-for="strategy"></div>
      </div>
    </div>

    <!-- Status & Planning -->
    <div class="form-section">
      <h2>Status & Planning</h2>

      <div class="form-row">
        <div class="form-group">
          <label for="status">Status</label>
          <select id="status" name="status">
            {% for status in statuses %}
            <option value="{{ status }}" {% if project.status == status %}selected{% endif %}>
              {{ status|replace('_', ' ')|title }}
            </option>
            {% endfor %}
          </select>
          <div class="hint">Selecting <strong>Completed</strong> will reveal a Retrospective section below.</div>
        </div>

        <div class="form-group">
          <label for="priority">Priority</label>
          <select id="priority" name="priority">
            {% for priority in priorities %}
            <option value="{{ priority }}" {% if project.priority == priority %}selected{% endif %}>
              {{ priority|title }}
            </option>
            {% endfor %}
          </select>
        </div>
      </div>

      <div class="form-row">
        <div class="form-group">
          <label for="start_date">Start Date</label>
          <input type="date" id="start_date" name="start_date"
                 value="{{ project.start_date.strftime('%Y-%m-%d') if project.start_date else '' }}">
        </div>

        <div class="form-group">
          <label for="deadline">Deadline</label>
          <input type="date" id="deadline" name="deadline"
                 value="{{ project.deadline.strftime('%Y-%m-%d') if project.deadline else '' }}">
          <div class="hint" id="deadlineHint"></div>
        </div>
      </div>
    </div>

    <!-- Retrospective (conditionally visible) -->
    <div class="form-section" id="retroSection"
         style="{% if project.status != 'completed' %}display:none{% endif %}">
      <h2>Project Retrospective</h2>

      <div class="form-group">
        <label for="what_worked">What Worked Well?</label>
        <textarea id="what_worked" name="what_worked" rows="3" maxlength="1000">{{ project.what_worked or '' }}</textarea>
        <div class="counter" data-for="what_worked"></div>
      </div>

      <div class="form-group">
        <label for="what_was_hard">What Was Challenging?</label>
        <textarea id="what_was_hard" name="what_was_hard" rows="3" maxlength="1000">{{ project.what_was_hard or '' }}</textarea>
        <div class="counter" data-for="what_was_hard"></div>
      </div>

      <div class="form-group">
        <label for="lessons_learned">Lessons Learned</label>
        <textarea id="lessons_learned" name="lessons_learned" rows="3" maxlength="1000">{{ project.lessons_learned or '' }}</textarea>
        <div class="counter" data-for="lessons_learned"></div>
      </div>
    </div>

    <!-- Actions -->
    <div class="form-actions">
      <button type="submit" class="btn btn-primary" id="saveBottom">üíæ Save Changes</button>
      <a href="{{ url_for('projects.tch_detail', id=project.id) }}" class="btn btn-secondary">Cancel</a>
    </div>
  </form>

  <!-- Danger Zone -->
  <div class="danger-zone">
    <h3>Danger Zone</h3>
    <p>This permanently deletes the project and <em>all</em> tasks, ideas, milestones, and notes.</p>
    <form method="POST" action="{{ url_for('projects.delete_tch', id=project.id) }}"
      onsubmit="return confirm('Are you absolutely sure? This will permanently delete:\\n\\n‚Ä¢ The project\\n‚Ä¢ All tasks\\n‚Ä¢ All ideas\\n‚Ä¢ All milestones\\n‚Ä¢ All notes\\n\\nThis cannot be undone.');">
      <button type="submit" class="btn btn-danger">üóëÔ∏è Delete Project</button>
    </form>
  </div>
</div>
{% endblock %}

{% block extra_js %}
<script>
/* ============================================================================
   Edit TCH Project ‚Äî client helpers
   - char counters
   - date validation (deadline ‚â• start)
   - dynamic retrospective reveal on status change
   - single-submit guard with "Saving‚Ä¶" state
============================================================================ */
(function(){
  const $ = s => document.querySelector(s);

  // Counters
  function wireCounter(id){
    const el = document.getElementById(id);
    if(!el) return;
    const counter = document.querySelector(`.counter[data-for="${id}"]`);
    const limit = parseInt(el.getAttribute('maxlength') || 1000, 10);
    const update = () => { if(counter) counter.textContent = `${el.value.length}/${limit}`; };
    el.addEventListener('input', update); update();
  }
  ['name','description','goal','motivation','strategy','what_worked','what_was_hard','lessons_learned'].forEach(wireCounter);

  // Dates
  const start = $('#start_date');
  const deadline = $('#deadline');
  const hint = $('#deadlineHint');
  function validateDates(){
    if(!deadline?.value){ hint.textContent = ''; return true; }
    const ok = new Date(deadline.value) >= new Date(start?.value || deadline.value);
    hint.textContent = ok ? '' : '‚ö†Ô∏è Deadline must be on or after the start date.';
    hint.style.color = ok ? '' : 'var(--ep-danger)';
    return ok;
  }
  start?.addEventListener('change', validateDates);
  deadline?.addEventListener('change', validateDates);

  // Retrospective toggle
  const statusSel = $('#status');
  const retro = $('#retroSection');
  function toggleRetro(){
    if(!statusSel || !retro) return;
    retro.style.display = (statusSel.value === 'completed') ? '' : 'none';
  }
  statusSel?.addEventListener('change', toggleRetro);
  toggleRetro();

  // Single-submit guard
  const form = document.getElementById('editProjectForm');
  const saveTop = document.getElementById('saveTop');
  const saveBottom = document.getElementById('saveBottom');
  function setSaving(s){
    [saveTop, saveBottom].forEach(b => { if(b){ b.disabled = s; b.textContent = s ? 'Saving‚Ä¶' : 'üíæ Save Changes'; }});
  }
  form?.addEventListener('submit', (e) => {
    if(!validateDates()){ e.preventDefault(); return; }
    setSaving(true);
  });
})();
</script>
{% endblock %}
